[{"/home/personal/test/my_tutorials-master/simple_wallet_1/src/index.js":"1","/home/personal/test/my_tutorials-master/simple_wallet_1/src/App.js":"2","/home/personal/test/my_tutorials-master/simple_wallet_1/src/reportWebVitals.js":"3","/home/personal/test/my_tutorials-master/simple_wallet_1/src/Wallet.js":"4","/home/personal/test/my_tutorials-master/simple_wallet_1/src/Interactions.js":"5","/home/personal/test/my_tutorials-master/simple_wallet_1/src/Interactions1.js":"6"},{"size":500,"mtime":1641073425000,"results":"7","hashOfConfig":"8"},{"size":194,"mtime":1641073425000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1641073425000,"results":"10","hashOfConfig":"8"},{"size":2808,"mtime":1646592049060,"results":"11","hashOfConfig":"8"},{"size":1068,"mtime":1646592248487,"results":"12","hashOfConfig":"8"},{"size":1006,"mtime":1646593878816,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1nsmzq2",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/personal/test/my_tutorials-master/simple_wallet_1/src/index.js",[],["30","31"],"/home/personal/test/my_tutorials-master/simple_wallet_1/src/App.js",["32"],"import logo from './logo.svg';\nimport './App.css';\nimport Wallet from './Wallet.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wallet/>\n    </div>\n  );\n}\n\nexport default App;\n","/home/personal/test/my_tutorials-master/simple_wallet_1/src/reportWebVitals.js",[],"/home/personal/test/my_tutorials-master/simple_wallet_1/src/Wallet.js",["33","34","35","36","37"],"import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Wallet.module.css'\nimport simple_token_abi from './Contracts/simple_token_abi.json'\nimport Interactions from './Interactions';\nimport Interactions1 from './Interactions1';\n\nconst Wallet = () => {\n\n\t// ganache-cli address\n\tconst contractAddress = '0x532d379FC5b6be257d14c531314Fc43750148F5F';\n\n\tconst [tokenName, setTokenName] = useState(\"Coin Flip Game\");\n\tconst [connButtonText, setConnButtonText] = useState(\"Connect Wallet\");\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\tconst [defaultAccount, setDefaultAccount] = useState(null);\n\tconst [balance, setBalance] = useState(null);\n\n\tconst [provider, setProvider] = useState(null);\n\tconst [signer, setSigner] = useState(null);\n\tconst [contract, setContract] = useState(null);\n\n\n\tconst connectWalletHandler = () => {\n\t\tif (window.ethereum && window.ethereum.isMetaMask) {\n\n\t\t\twindow.ethereum.request({method: 'eth_requestAccounts'})\n\t\t\t.then(result => {\n\t\t\t\taccountChangedHandler(result[0]);\n\t\t\t\tsetConnButtonText('Wallet Connected');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(error.message);\n\t\t\t})\n\n\n\t\t} else {\n\t\t\tconsole.log('need to install metamask');\n\t\t\tsetErrorMessage('Please install MetaMask');\n\t\t}\n\t}\n\n\tconst accountChangedHandler = (newAddress) => {\n\t\tsetDefaultAccount(newAddress);\n\t\tupdateEthers();\n\t}\n\n\tconst updateEthers = () => {\n\t\tlet tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n\n\t\tlet tempSigner = tempProvider.getSigner();\n\n\t\tlet tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner)\n\n\t\tsetProvider(tempProvider);\n\t\tsetSigner(tempSigner);\n\t\tsetContract(tempContract);\n\t}\n\n\tuseEffect(() => {\n\t\tif (contract != null) {\n\t\t\tupdateBalance();\n\t\t//\tupdateTokenName();\n\t\t}\n\t}, [contract])\n\n\tconst updateBalance = async () => {\n\t\tlet balanceBigN = await contract.getuserBalance();\n\t\tlet balanceNumber = balanceBigN.toNumber();\n\n\t//\tlet decimals = await contract.decimals();\n\n\t//\tlet tokenBalance = balanceNumber / Math.pow(10, decimals);\n\n\t\tsetBalance(balanceNumber);\n\t\tconsole.log(balanceNumber);\n\t}\n\n\tconst updateTokenName = async () => {\n\n\t\t\n\t\tlet betBoolean = true;\n\t\tconsole.log(betBoolean)\n\t\tlet txt = await contract.flip(betBoolean);\n\t\tconsole.log(txt);\n\t}\n\t\nreturn (\n\t<div>\n\t\t<h2> {tokenName} </h2>\n\t\t<h2> {\"Step-1. Connect your metamask by clicking below\"} </h2>\n\t\t<button className={styles.button6} onClick={connectWalletHandler}>{connButtonText}</button>\n\n\t\t<div className = {styles.walletCard}>\n\t\t\t<div>\n\t\t\t\t<h3>Address: {defaultAccount}</h3>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h3>{tokenName} User Balance: {balance}</h3>\n\t\t\t</div>\n\t\t\t{errorMessage}\n\t\t\t</div>\n\n\t\t<Interactions1 contract={contract}/>\n\t\t\t<Interactions contract={contract}/>\n\n\t\t\n\t</div>\n\t);\n}\n\nexport default Wallet;","/home/personal/test/my_tutorials-master/simple_wallet_1/src/Interactions.js",["38","39"],"import {React, useState, useEffect} from 'react'\nimport {ethers} from 'ethers'\nimport styles from './Wallet.module.css'\n\n\nconst Interactions = (props) => {\n\n\tconst [transferHash, setTransferHash] = useState(null);\n\n\tconst transferHandler = async (e) => {\n\t\te.preventDefault();\n\t\tlet betBoolean = e.target.bet.checked;\n\t\tconsole.log(betBoolean)\n\t\tlet txt = await props.contract.flip(betBoolean);\n\t\tsetTransferHash(txt.hash);\n\t}\n\t\nreturn (\n\t\t\t<div className={styles.interactionsCard}>\n\t\t\t\t<form onSubmit={transferHandler}>\n\t\t\t\t\t\t<h2> {\"Step-3. Flip the Coin here \"} </h2>\n\t\t\t\t\t<h3> {\"Once you receive the transaction hash, just refresh the page.\"}</h3>\n\t\t\t\t\t\t<h3> Your Balance will get doubled if you win or will become 0 if you loose.</h3>\n\t\t\t\t\t<h3> Flip the Coin here</h3>\n\t\t\t\t\t\t<p> Checked Box - Head</p>\n\t\t\t\n\t\t\t\t\t\t<p> Unchecked Box - Tail </p>\n\t\t\t\t\t\t<input type='checkbox' id='bet' step='1'/>\n\n\t\t\t\t\t\t<button type='submit' className={styles.button6}>Send</button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{transferHash}\n\t\t\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t</div>\n\t\t)\n}\n\nexport default Interactions;","/home/personal/test/my_tutorials-master/simple_wallet_1/src/Interactions1.js",["40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":13,"column":20,"nodeType":"47","messageId":"48","endLine":13,"endColumn":32},{"ruleId":"45","severity":1,"message":"50","line":19,"column":9,"nodeType":"47","messageId":"48","endLine":19,"endColumn":17},{"ruleId":"45","severity":1,"message":"51","line":20,"column":9,"nodeType":"47","messageId":"48","endLine":20,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":65,"column":5,"nodeType":"54","endLine":65,"endColumn":15,"suggestions":"55"},{"ruleId":"45","severity":1,"message":"56","line":79,"column":8,"nodeType":"47","messageId":"48","endLine":79,"endColumn":23},{"ruleId":"45","severity":1,"message":"57","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},{"ruleId":"45","severity":1,"message":"58","line":2,"column":9,"nodeType":"47","messageId":"48","endLine":2,"endColumn":15},{"ruleId":"45","severity":1,"message":"57","line":1,"column":26,"nodeType":"47","messageId":"48","endLine":1,"endColumn":35},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setTokenName' is assigned a value but never used.","'provider' is assigned a value but never used.","'signer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateBalance'. Either include it or remove the dependency array.","ArrayExpression",["61"],"'updateTokenName' is assigned a value but never used.","'useEffect' is defined but never used.","'ethers' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [contract, updateBalance]",{"range":"64","text":"65"},[1805,1815],"[contract, updateBalance]"]